basePath: /
definitions:
  domain.Chapter:
    properties:
      isPublished:
        type: boolean
      number:
        type: integer
      pageCount:
        type: integer
      uploadedAt:
        type: string
      uploaderId:
        type: string
      volume:
        type: integer
    type: object
  domain.CreateUserDTO:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  domain.LoginUserDTO:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  domain.Manga:
    properties:
      _id:
        type: string
      ageRating:
        type: integer
      alternativeTitles:
        items:
          type: string
        type: array
      author:
        type: string
      chapters:
        items:
          $ref: '#/definitions/domain.Chapter'
        type: array
      createdAt:
        type: string
      description:
        type: string
      isPublished:
        type: boolean
      likeCount:
        type: integer
      previewUrl:
        type: string
      releaseYear:
        type: integer
      slug:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      uploaderId:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Server for Manga Library App
  title: Manga Library API
  version: "1.0"
paths:
  /api/chapter/:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - in: formData
        name: mangaSlug
        required: true
        type: string
      - in: formData
        minimum: 0
        name: number
        required: true
        type: integer
      - in: formData
        minimum: 0
        name: volume
        required: true
        type: integer
      - description: Chapter archive (only .zip)
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Upload Chapter
      tags:
      - Chapter
  /api/chapter/{slug}/{volume}/{number}:
    delete:
      consumes:
      - multipart/form-data
      parameters:
      - in: formData
        name: mangaSlug
        required: true
        type: string
      - in: formData
        minimum: 0
        name: number
        required: true
        type: integer
      - in: formData
        minimum: 0
        name: volume
        required: true
        type: integer
      - description: Chapter archive (only .zip)
        in: formData
        name: file
        required: true
        type: file
      - description: Manga Slug
        in: path
        name: slug
        required: true
        type: string
      - description: Chapter Volume
        in: path
        name: volume
        required: true
        type: integer
      - description: Chapter Number
        in: path
        name: number
        required: true
        type: integer
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Delete Chapter
      tags:
      - Chapter
  /api/heartbeat:
    get:
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      summary: Heartbeat metric
      tags:
      - Metrics
  /api/manga:
    get:
      parameters:
      - description: Manga ID
        in: query
        name: id
        type: string
      - description: Manga slug
        in: query
        name: slug
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Manga'
        "400":
          description: Invalid input (One of params is required)
        "404":
          description: Manga not found
        "500":
          description: Internal Server Error
      summary: Get Manga by ID or Slug
      tags:
      - Manga
  /api/manga/:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - in: formData
        name: ageRating
        required: true
        type: integer
      - example: title1,title2,title3 (separate by comma)
        in: formData
        name: alternativeTitles
        type: string
      - in: formData
        name: author
        required: true
        type: string
      - in: formData
        name: description
        required: true
        type: string
      - in: formData
        name: releaseYear
        required: true
        type: integer
      - example: tag1,tag2,tag3 (separate by comma)
        in: formData
        name: tags
        required: true
        type: string
      - in: formData
        name: title
        required: true
        type: string
      - description: Manga preview image (jpg, jpeg)
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: Created manga ID
          schema:
            type: string
        "400":
          description: Invalid input
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Create Manga
      tags:
      - Manga
  /api/manga/{id}:
    delete:
      parameters:
      - description: Manga ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Delete Manga by ID
      tags:
      - Manga
    patch:
      consumes:
      - multipart/form-data
      parameters:
      - in: formData
        name: ageRating
        type: integer
      - example: title1,title2,title3 (separate by comma)
        in: formData
        name: alternativeTitles
        type: string
      - in: formData
        name: author
        type: string
      - in: formData
        name: description
        type: string
      - in: formData
        name: isPublished
        type: boolean
      - in: formData
        name: releaseYear
        type: integer
      - example: tag1,tag2,tag3 (separate by comma)
        in: formData
        name: tags
        type: string
      - in: formData
        name: title
        type: string
      - description: Manga preview image (jpg, jpeg)
        in: formData
        name: preview
        type: file
      - description: Manga ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Update Manga by ID
      tags:
      - Manga
  /api/manga/filter:
    get:
      parameters:
      - description: Tags
        in: query
        name: tags
        required: true
        type: string
      - description: Offset
        in: query
        name: offset
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Manga'
            type: array
        "400":
          description: Invalid input (Invalid offset)
        "404":
          description: Manga not found
        "500":
          description: Internal Server Error
      summary: Get Manga by tags
      tags:
      - Manga
  /api/manga/latest:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Manga'
            type: array
        "500":
          description: Internal Server Error
      summary: Get Latest Manga
      tags:
      - Manga
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Sign in via username and password
      parameters:
      - description: Auth Sign In Input
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/domain.LoginUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
        "400":
          description: Invalid input
        "500":
          description: Internal Server Error
      summary: Sign In
      tags:
      - Authorization
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Sign up via username and password
      parameters:
      - description: Auth Sign Up Input
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/domain.CreateUserDTO'
      responses:
        "201":
          description: Created
        "409":
          description: Username is already exists
        "500":
          description: Internal Server Error
      summary: Sign up
      tags:
      - Authorization
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
